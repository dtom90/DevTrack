{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/esm/directives/toggle/toggle.js","webpack:///./node_modules/bootstrap-vue/esm/directives/visible/visible.js","webpack:///./node_modules/bootstrap-vue/esm/directives/tooltip/tooltip.js","webpack:///./node_modules/bootstrap-vue/esm/directives/tooltip/index.js","webpack:///./node_modules/bootstrap-vue/esm/directives/modal/modal.js","webpack:///./node_modules/bootstrap-vue/esm/directives/toggle/index.js","webpack:///./node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","webpack:///./node_modules/bootstrap-vue/esm/icons/helpers/make-icon.js"],"names":["CLASS_BV_TOGGLE_COLLAPSED","CLASS_BV_TOGGLE_NOT_COLLAPSED","BV_BASE","BV_TOGGLE_ROOT_HANDLER","concat","BV_TOGGLE_CLICK_HANDLER","BV_TOGGLE_STATE","BV_TOGGLE_TARGETS","STRING_FALSE","STRING_TRUE","ATTR_ARIA_CONTROLS","ATTR_ARIA_EXPANDED","ATTR_ROLE","ATTR_TABINDEX","STYLE_OVERFLOW_ANCHOR","ROOT_ACTION_EVENT_NAME_TOGGLE","ROOT_EVENT_NAME_STATE","ROOT_EVENT_NAME_SYNC_STATE","ROOT_ACTION_EVENT_NAME_REQUEST_STATE","KEYDOWN_KEY_CODES","isNonStandardTag","el","tagName","toLowerCase","getTargets","_ref","modifiers","arg","value","targets","split","href","test","push","replace","forEach","t","filter","index","arr","indexOf","removeClickListener","handler","addClickListener","instance","event","type","keyCode","target","$emit","removeRootListeners","$off","addRootListeners","id","state","setToggleState","$on","resetProp","prop","handleUpdate","binding","vnode","length","join","VBToggle","bind","componentUpdated","updated","unbind","_classCallCheck","Constructor","TypeError","_defineProperties","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","OBSERVER_PROP_NAME","VisibilityObserver","options","this","callback","margin","once","observer","visible","undefined","doneOnce","createObserver","_this","stop","IntersectionObserver","root","rootMargin","threshold","_unused","observe","entries","entry","isIntersecting","Boolean","intersectionRatio","disconnect","destroy","mod","_prevModifiers","_ref2","oldValue","VBVisible","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","BV_TOOLTIP","DefaultTrigger","validTriggers","focus","hover","click","blur","manual","htmlRE","noninteractiveRE","noFadeRE","placementRE","boundaryRE","delayRE","delayShowRE","delayHideRE","offsetRE","variantRE","spacesRE","bindings","config","title","trigger","placement","fallbackPlacement","container","animation","offset","html","interactive","disabled","delay","boundary","String","boundaryPadding","variant","customClass","attrs","data","show","hide","slice","selectedTriggers","identity","trim","parent","_scopeId","__bv_prev_data__","updateData","triggers","noFade","oldData","newData","removeTooltip","$destroy","VBTooltip","VBTooltipPlugin","directives","ROOT_ACTION_EVENT_NAME_SHOW","PROPERTY","getTarget","_ref$modifiers","reverse","getTriggerElement","setRole","currentTarget","oldProp","VBModal","inserted","VBTogglePlugin","BASE_ATTRS","viewBox","width","height","focusable","role","STACKED_ATTRS","content","flipH","flipV","fontScale","rotate","scale","shiftH","shiftV","stacked","BVIconBase","name","functional","render","h","_class","children","math","hasScale","hasTransforms","hasShift","hasContent","transforms","$inner","transform","domProps","innerHTML","$title","$content","staticClass","class","style","fontSize","xmlns","fill","iconProps","kebabName","iconName","iconNameClass","iconTitle","svgContent"],"mappings":"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","file":"js/chunk-vendors~f8ef863f.d57f273c.js","sourcesContent":["import { NAME_COLLAPSE } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_ENTER, CODE_SPACE } from '../../constants/key-codes';\nimport { RX_HASH, RX_HASH_ID, RX_SPACE_SPLIT } from '../../constants/regex';\nimport { arrayIncludes, concat } from '../../utils/array';\nimport { getInstanceFromDirective } from '../../utils/get-instance-from-directive';\nimport { addClass, getAttr, hasAttr, isDisabled, isTag, removeAttr, removeClass, removeStyle, requestAF, setAttr, setStyle } from '../../utils/dom';\nimport { getRootActionEventName, getRootEventName, eventOn, eventOff } from '../../utils/events';\nimport { isString } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { keys } from '../../utils/object';\nimport { getEventRoot } from '../../utils/get-event-root'; // --- Constants ---\n// Classes to apply to trigger element\n\nvar CLASS_BV_TOGGLE_COLLAPSED = 'collapsed';\nvar CLASS_BV_TOGGLE_NOT_COLLAPSED = 'not-collapsed'; // Property key for handler storage\n\nvar BV_BASE = '__BV_toggle'; // Root event listener property (Function)\n\nvar BV_TOGGLE_ROOT_HANDLER = \"\".concat(BV_BASE, \"_HANDLER__\"); // Trigger element click handler property (Function)\n\nvar BV_TOGGLE_CLICK_HANDLER = \"\".concat(BV_BASE, \"_CLICK__\"); // Target visibility state property (Boolean)\n\nvar BV_TOGGLE_STATE = \"\".concat(BV_BASE, \"_STATE__\"); // Target ID list property (Array)\n\nvar BV_TOGGLE_TARGETS = \"\".concat(BV_BASE, \"_TARGETS__\"); // Commonly used strings\n\nvar STRING_FALSE = 'false';\nvar STRING_TRUE = 'true'; // Commonly used attribute names\n\nvar ATTR_ARIA_CONTROLS = 'aria-controls';\nvar ATTR_ARIA_EXPANDED = 'aria-expanded';\nvar ATTR_ROLE = 'role';\nvar ATTR_TABINDEX = 'tabindex'; // Commonly used style properties\n\nvar STYLE_OVERFLOW_ANCHOR = 'overflow-anchor'; // Emitted control event for collapse (emitted to collapse)\n\nvar ROOT_ACTION_EVENT_NAME_TOGGLE = getRootActionEventName(NAME_COLLAPSE, 'toggle'); // Listen to event for toggle state update (emitted by collapse)\n\nvar ROOT_EVENT_NAME_STATE = getRootEventName(NAME_COLLAPSE, 'state'); // Private event emitted on `$root` to ensure the toggle state is always synced\n// Gets emitted even if the state of b-collapse has not changed\n// This event is NOT to be documented as people should not be using it\n\nvar ROOT_EVENT_NAME_SYNC_STATE = getRootEventName(NAME_COLLAPSE, 'sync-state'); // Private event we send to collapse to request state update sync event\n\nvar ROOT_ACTION_EVENT_NAME_REQUEST_STATE = getRootActionEventName(NAME_COLLAPSE, 'request-state');\nvar KEYDOWN_KEY_CODES = [CODE_ENTER, CODE_SPACE]; // --- Helper methods ---\n\nvar isNonStandardTag = function isNonStandardTag(el) {\n  return !arrayIncludes(['button', 'a'], el.tagName.toLowerCase());\n};\n\nvar getTargets = function getTargets(_ref, el) {\n  var modifiers = _ref.modifiers,\n      arg = _ref.arg,\n      value = _ref.value;\n  // Any modifiers are considered target IDs\n  var targets = keys(modifiers || {}); // If value is a string, split out individual targets (if space delimited)\n\n  value = isString(value) ? value.split(RX_SPACE_SPLIT) : value; // Support target ID as link href (`href=\"#id\"`)\n\n  if (isTag(el.tagName, 'a')) {\n    var href = getAttr(el, 'href') || '';\n\n    if (RX_HASH_ID.test(href)) {\n      targets.push(href.replace(RX_HASH, ''));\n    }\n  } // Add ID from `arg` (if provided), and support value\n  // as a single string ID or an array of string IDs\n  // If `value` is not an array or string, then it gets filtered out\n\n\n  concat(arg, value).forEach(function (t) {\n    return isString(t) && targets.push(t);\n  }); // Return only unique and truthy target IDs\n\n  return targets.filter(function (t, index, arr) {\n    return t && arr.indexOf(t) === index;\n  });\n};\n\nvar removeClickListener = function removeClickListener(el) {\n  var handler = el[BV_TOGGLE_CLICK_HANDLER];\n\n  if (handler) {\n    eventOff(el, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(el, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n  }\n\n  el[BV_TOGGLE_CLICK_HANDLER] = null;\n};\n\nvar addClickListener = function addClickListener(el, instance) {\n  removeClickListener(el);\n\n  if (instance) {\n    var handler = function handler(event) {\n      if (!(event.type === 'keydown' && !arrayIncludes(KEYDOWN_KEY_CODES, event.keyCode)) && !isDisabled(el)) {\n        var targets = el[BV_TOGGLE_TARGETS] || [];\n        targets.forEach(function (target) {\n          getEventRoot(instance).$emit(ROOT_ACTION_EVENT_NAME_TOGGLE, target);\n        });\n      }\n    };\n\n    el[BV_TOGGLE_CLICK_HANDLER] = handler;\n    eventOn(el, 'click', handler, EVENT_OPTIONS_PASSIVE);\n\n    if (isNonStandardTag(el)) {\n      eventOn(el, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n    }\n  }\n};\n\nvar removeRootListeners = function removeRootListeners(el, instance) {\n  if (el[BV_TOGGLE_ROOT_HANDLER] && instance) {\n    getEventRoot(instance).$off([ROOT_EVENT_NAME_STATE, ROOT_EVENT_NAME_SYNC_STATE], el[BV_TOGGLE_ROOT_HANDLER]);\n  }\n\n  el[BV_TOGGLE_ROOT_HANDLER] = null;\n};\n\nvar addRootListeners = function addRootListeners(el, instance) {\n  removeRootListeners(el, instance);\n\n  if (instance) {\n    var handler = function handler(id, state) {\n      // `state` will be `true` if target is expanded\n      if (arrayIncludes(el[BV_TOGGLE_TARGETS] || [], id)) {\n        // Set/Clear 'collapsed' visibility class state\n        el[BV_TOGGLE_STATE] = state; // Set `aria-expanded` and class state on trigger element\n\n        setToggleState(el, state);\n      }\n    };\n\n    el[BV_TOGGLE_ROOT_HANDLER] = handler; // Listen for toggle state changes (public) and sync (private)\n\n    getEventRoot(instance).$on([ROOT_EVENT_NAME_STATE, ROOT_EVENT_NAME_SYNC_STATE], handler);\n  }\n};\n\nvar setToggleState = function setToggleState(el, state) {\n  // State refers to the visibility of the collapse/sidebar\n  if (state) {\n    removeClass(el, CLASS_BV_TOGGLE_COLLAPSED);\n    addClass(el, CLASS_BV_TOGGLE_NOT_COLLAPSED);\n    setAttr(el, ATTR_ARIA_EXPANDED, STRING_TRUE);\n  } else {\n    removeClass(el, CLASS_BV_TOGGLE_NOT_COLLAPSED);\n    addClass(el, CLASS_BV_TOGGLE_COLLAPSED);\n    setAttr(el, ATTR_ARIA_EXPANDED, STRING_FALSE);\n  }\n}; // Reset and remove a property from the provided element\n\n\nvar resetProp = function resetProp(el, prop) {\n  el[prop] = null;\n  delete el[prop];\n}; // Handle directive updates\n\n\nvar handleUpdate = function handleUpdate(el, binding, vnode) {\n  /* istanbul ignore next: should never happen */\n  if (!IS_BROWSER || !getInstanceFromDirective(vnode, binding)) {\n    return;\n  } // If element is not a button or link, we add `role=\"button\"`\n  // and `tabindex=\"0\"` for accessibility reasons\n\n\n  if (isNonStandardTag(el)) {\n    if (!hasAttr(el, ATTR_ROLE)) {\n      setAttr(el, ATTR_ROLE, 'button');\n    }\n\n    if (!hasAttr(el, ATTR_TABINDEX)) {\n      setAttr(el, ATTR_TABINDEX, '0');\n    }\n  } // Ensure the collapse class and `aria-*` attributes persist\n  // after element is updated (either by parent re-rendering\n  // or changes to this element or its contents)\n\n\n  setToggleState(el, el[BV_TOGGLE_STATE]); // Parse list of target IDs\n\n  var targets = getTargets(binding, el); // Ensure the `aria-controls` hasn't been overwritten\n  // or removed when vnode updates\n  // Also ensure to set `overflow-anchor` to `none` to prevent\n  // the browser's scroll anchoring behavior\n\n  /* istanbul ignore else */\n\n  if (targets.length > 0) {\n    setAttr(el, ATTR_ARIA_CONTROLS, targets.join(' '));\n    setStyle(el, STYLE_OVERFLOW_ANCHOR, 'none');\n  } else {\n    removeAttr(el, ATTR_ARIA_CONTROLS);\n    removeStyle(el, STYLE_OVERFLOW_ANCHOR);\n  } // Add/Update our click listener(s)\n  // Wrap in a `requestAF()` to allow any previous\n  // click handling to occur first\n\n\n  requestAF(function () {\n    addClickListener(el, getInstanceFromDirective(vnode, binding));\n  }); // If targets array has changed, update\n\n  if (!looseEqual(targets, el[BV_TOGGLE_TARGETS])) {\n    // Update targets array to element storage\n    el[BV_TOGGLE_TARGETS] = targets; // Ensure `aria-controls` is up to date\n    // Request a state update from targets so that we can\n    // ensure expanded state is correct (in most cases)\n\n    targets.forEach(function (target) {\n      getEventRoot(getInstanceFromDirective(vnode, binding)).$emit(ROOT_ACTION_EVENT_NAME_REQUEST_STATE, target);\n    });\n  }\n};\n/*\n * Export our directive\n */\n\n\nexport var VBToggle = {\n  bind: function bind(el, binding, vnode) {\n    // State is initially collapsed until we receive a state event\n    el[BV_TOGGLE_STATE] = false; // Assume no targets initially\n\n    el[BV_TOGGLE_TARGETS] = []; // Add our root listeners\n\n    addRootListeners(el, getInstanceFromDirective(vnode, binding)); // Initial update of trigger\n\n    handleUpdate(el, binding, vnode);\n  },\n  componentUpdated: handleUpdate,\n  updated: handleUpdate,\n  unbind: function unbind(el, binding, vnode) {\n    removeClickListener(el); // Remove our $root listener\n\n    removeRootListeners(el, getInstanceFromDirective(vnode, binding)); // Reset custom props\n\n    resetProp(el, BV_TOGGLE_ROOT_HANDLER);\n    resetProp(el, BV_TOGGLE_CLICK_HANDLER);\n    resetProp(el, BV_TOGGLE_STATE);\n    resetProp(el, BV_TOGGLE_TARGETS); // Reset classes/attrs/styles\n\n    removeClass(el, CLASS_BV_TOGGLE_COLLAPSED);\n    removeClass(el, CLASS_BV_TOGGLE_NOT_COLLAPSED);\n    removeAttr(el, ATTR_ARIA_EXPANDED);\n    removeAttr(el, ATTR_ARIA_CONTROLS);\n    removeAttr(el, ATTR_ROLE);\n    removeStyle(el, STYLE_OVERFLOW_ANCHOR);\n  }\n};","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// v-b-visible\n// Private visibility check directive\n// Based on IntersectionObserver\n//\n// Usage:\n//  v-b-visibility.<margin>.<once>=\"<callback>\"\n//\n//  Value:\n//  <callback>: method to be called when visibility state changes, receives one arg:\n//     true:  element is visible\n//     false: element is not visible\n//     null:  IntersectionObserver not supported\n//\n//  Modifiers:\n//    <margin>: a positive decimal value of pixels away from viewport edge\n//              before being considered \"visible\". default is 0\n//    <once>:   keyword 'once', meaning when the element becomes visible and\n//              callback is called observation/notification will stop.\n//\n// When used in a render function:\n// export default {\n//   directives: { 'b-visible': VBVisible },\n//   render(h) {\n//     h(\n//       'div',\n//       {\n//         directives: [\n//           { name: 'b-visible', value=this.callback, modifiers: { '123':true, 'once':true } }\n//         ]\n//       }\n//     )\n//   }\nimport { RX_DIGITS } from '../../constants/regex';\nimport { requestAF } from '../../utils/dom';\nimport { isFunction } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { clone, keys } from '../../utils/object';\nimport { nextTick } from '../../vue';\nvar OBSERVER_PROP_NAME = '__bv__visibility_observer';\n\nvar VisibilityObserver = /*#__PURE__*/function () {\n  function VisibilityObserver(el, options) {\n    _classCallCheck(this, VisibilityObserver);\n\n    this.el = el;\n    this.callback = options.callback;\n    this.margin = options.margin || 0;\n    this.once = options.once || false;\n    this.observer = null;\n    this.visible = undefined;\n    this.doneOnce = false; // Create the observer instance (if possible)\n\n    this.createObserver();\n  }\n\n  _createClass(VisibilityObserver, [{\n    key: \"createObserver\",\n    value: function createObserver() {\n      var _this = this;\n\n      // Remove any previous observer\n      if (this.observer) {\n        /* istanbul ignore next */\n        this.stop();\n      } // Should only be called once and `callback` prop should be a function\n\n\n      if (this.doneOnce || !isFunction(this.callback)) {\n        /* istanbul ignore next */\n        return;\n      } // Create the observer instance\n\n\n      try {\n        // Future: Possibly add in other modifiers for left/right/top/bottom\n        // offsets, root element reference, and thresholds\n        this.observer = new IntersectionObserver(this.handler.bind(this), {\n          // `null` = 'viewport'\n          root: null,\n          // Pixels away from view port to consider \"visible\"\n          rootMargin: this.margin,\n          // Intersection ratio of el and root (as a value from 0 to 1)\n          threshold: 0\n        });\n      } catch (_unused) {\n        // No IntersectionObserver support, so just stop trying to observe\n        this.doneOnce = true;\n        this.observer = undefined;\n        this.callback(null);\n        return;\n      } // Start observing in a `$nextTick()` (to allow DOM to complete rendering)\n\n      /* istanbul ignore next: IntersectionObserver not supported in JSDOM */\n\n\n      nextTick(function () {\n        requestAF(function () {\n          // Placed in an `if` just in case we were destroyed before\n          // this `requestAnimationFrame` runs\n          if (_this.observer) {\n            _this.observer.observe(_this.el);\n          }\n        });\n      });\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"handler\",\n    value: function handler(entries) {\n      var entry = entries ? entries[0] : {};\n      var isIntersecting = Boolean(entry.isIntersecting || entry.intersectionRatio > 0.0);\n\n      if (isIntersecting !== this.visible) {\n        this.visible = isIntersecting;\n        this.callback(isIntersecting);\n\n        if (this.once && this.visible) {\n          this.doneOnce = true;\n          this.stop();\n        }\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      /* istanbul ignore next */\n      this.observer && this.observer.disconnect();\n      this.observer = null;\n    }\n  }]);\n\n  return VisibilityObserver;\n}();\n\nvar destroy = function destroy(el) {\n  var observer = el[OBSERVER_PROP_NAME];\n\n  if (observer && observer.stop) {\n    observer.stop();\n  }\n\n  delete el[OBSERVER_PROP_NAME];\n};\n\nvar bind = function bind(el, _ref) {\n  var value = _ref.value,\n      modifiers = _ref.modifiers;\n  // `value` is the callback function\n  var options = {\n    margin: '0px',\n    once: false,\n    callback: value\n  }; // Parse modifiers\n\n  keys(modifiers).forEach(function (mod) {\n    /* istanbul ignore else: Until <b-img-lazy> is switched to use this directive */\n    if (RX_DIGITS.test(mod)) {\n      options.margin = \"\".concat(mod, \"px\");\n    } else if (mod.toLowerCase() === 'once') {\n      options.once = true;\n    }\n  }); // Destroy any previous observer\n\n  destroy(el); // Create new observer\n\n  el[OBSERVER_PROP_NAME] = new VisibilityObserver(el, options); // Store the current modifiers on the object (cloned)\n\n  el[OBSERVER_PROP_NAME]._prevModifiers = clone(modifiers);\n}; // When the directive options may have been updated (or element)\n\n\nvar componentUpdated = function componentUpdated(el, _ref2, vnode) {\n  var value = _ref2.value,\n      oldValue = _ref2.oldValue,\n      modifiers = _ref2.modifiers;\n  // Compare value/oldValue and modifiers to see if anything has changed\n  // and if so, destroy old observer and create new observer\n\n  /* istanbul ignore next */\n  modifiers = clone(modifiers);\n  /* istanbul ignore next */\n\n  if (el && (value !== oldValue || !el[OBSERVER_PROP_NAME] || !looseEqual(modifiers, el[OBSERVER_PROP_NAME]._prevModifiers))) {\n    // Re-bind on element\n    bind(el, {\n      value: value,\n      modifiers: modifiers\n    }, vnode);\n  }\n}; // When directive un-binds from element\n\n\nvar unbind = function unbind(el) {\n  // Remove the observer\n  destroy(el);\n}; // Export the directive\n\n\nexport var VBVisible = {\n  bind: bind,\n  componentUpdated: componentUpdated,\n  unbind: unbind\n};","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { NAME_TOOLTIP } from '../../constants/components';\nimport { IS_BROWSER } from '../../constants/env';\nimport { EVENT_NAME_SHOW } from '../../constants/events';\nimport { concat } from '../../utils/array';\nimport { isVue3, nextTick } from '../../vue';\nimport { getComponentConfig } from '../../utils/config';\nimport { getScopeId } from '../../utils/get-scope-id';\nimport { identity } from '../../utils/identity';\nimport { getInstanceFromDirective } from '../../utils/get-instance-from-directive';\nimport { isFunction, isNumber, isPlainObject, isString, isUndefined, isUndefinedOrNull } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { toInteger } from '../../utils/number';\nimport { keys } from '../../utils/object';\nimport { createNewChildComponent } from '../../utils/create-new-child-component';\nimport { BVTooltip } from '../../components/tooltip/helpers/bv-tooltip'; // Key which we use to store tooltip object on element\n\nvar BV_TOOLTIP = '__BV_Tooltip__'; // Default trigger\n\nvar DefaultTrigger = 'hover focus'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true,\n  manual: true\n}; // Directive modifier test regular expressions. Pre-compile for performance\n\nvar htmlRE = /^html$/i;\nvar noninteractiveRE = /^noninteractive$/i;\nvar noFadeRE = /^nofade$/i;\nvar placementRE = /^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/i;\nvar boundaryRE = /^(window|viewport|scrollParent)$/i;\nvar delayRE = /^d\\d+$/i;\nvar delayShowRE = /^ds\\d+$/i;\nvar delayHideRE = /^dh\\d+$/i;\nvar offsetRE = /^o-?\\d+$/i;\nvar variantRE = /^v-.+$/i;\nvar spacesRE = /\\s+/; // Build a Tooltip config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\nvar parseBindings = function parseBindings(bindings, vnode)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a basic config\n  var config = {\n    title: undefined,\n    trigger: '',\n    // Default set below if needed\n    placement: 'top',\n    fallbackPlacement: 'flip',\n    container: false,\n    // Default of body\n    animation: true,\n    offset: 0,\n    id: null,\n    html: false,\n    interactive: true,\n    disabled: false,\n    delay: getComponentConfig(NAME_TOOLTIP, 'delay', 50),\n    boundary: String(getComponentConfig(NAME_TOOLTIP, 'boundary', 'scrollParent')),\n    boundaryPadding: toInteger(getComponentConfig(NAME_TOOLTIP, 'boundaryPadding', 5), 0),\n    variant: getComponentConfig(NAME_TOOLTIP, 'variant'),\n    customClass: getComponentConfig(NAME_TOOLTIP, 'customClass')\n  }; // Process `bindings.value`\n\n  if (isString(bindings.value) || isNumber(bindings.value)) {\n    // Value is tooltip content (HTML optionally supported)\n    config.title = bindings.value;\n  } else if (isFunction(bindings.value)) {\n    // Title generator function\n    config.title = bindings.value;\n  } else if (isPlainObject(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread(_objectSpread({}, config), bindings.value);\n  } // If title is not provided, try title attribute\n\n\n  if (isUndefined(config.title)) {\n    // Try attribute\n    var attrs = isVue3 ? vnode.props : (vnode.data || {}).attrs;\n    config.title = attrs && !isUndefinedOrNull(attrs.title) ? attrs.title : undefined;\n  } // Normalize delay\n\n\n  if (!isPlainObject(config.delay)) {\n    config.delay = {\n      show: toInteger(config.delay, 0),\n      hide: toInteger(config.delay, 0)\n    };\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  keys(bindings.modifiers).forEach(function (mod) {\n    if (htmlRE.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (noninteractiveRE.test(mod)) {\n      // Noninteractive\n      config.interactive = false;\n    } else if (noFadeRE.test(mod)) {\n      // No animation\n      config.animation = false;\n    } else if (placementRE.test(mod)) {\n      // Placement of tooltip\n      config.placement = mod;\n    } else if (boundaryRE.test(mod)) {\n      // Boundary of tooltip\n      mod = mod === 'scrollparent' ? 'scrollParent' : mod;\n      config.boundary = mod;\n    } else if (delayRE.test(mod)) {\n      // Delay value\n      var delay = toInteger(mod.slice(1), 0);\n      config.delay.show = delay;\n      config.delay.hide = delay;\n    } else if (delayShowRE.test(mod)) {\n      // Delay show value\n      config.delay.show = toInteger(mod.slice(2), 0);\n    } else if (delayHideRE.test(mod)) {\n      // Delay hide value\n      config.delay.hide = toInteger(mod.slice(2), 0);\n    } else if (offsetRE.test(mod)) {\n      // Offset value, negative allowed\n      config.offset = toInteger(mod.slice(1), 0);\n    } else if (variantRE.test(mod)) {\n      // Variant\n      config.variant = mod.slice(2) || null;\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  concat(config.trigger || '').filter(identity).join(' ').trim().toLowerCase().split(spacesRE).forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  keys(bindings.modifiers).forEach(function (mod) {\n    mod = mod.toLowerCase();\n\n    if (validTriggers[mod]) {\n      // If modifier is a valid trigger\n      selectedTriggers[mod] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = keys(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to 'focus'\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Use default trigger\n    config.trigger = DefaultTrigger;\n  } // Return the config\n\n\n  return config;\n}; // Add/update Tooltip on our element\n\n\nvar applyTooltip = function applyTooltip(el, bindings, vnode) {\n  if (!IS_BROWSER) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  var config = parseBindings(bindings, vnode);\n\n  if (!el[BV_TOOLTIP]) {\n    var parent = getInstanceFromDirective(vnode, bindings);\n    el[BV_TOOLTIP] = createNewChildComponent(parent, BVTooltip, {\n      // Add the parent's scoped style attribute data\n      _scopeId: getScopeId(parent, undefined)\n    });\n    el[BV_TOOLTIP].__bv_prev_data__ = {};\n    el[BV_TOOLTIP].$on(EVENT_NAME_SHOW, function ()\n    /* istanbul ignore next: for now */\n    {\n      // Before showing the tooltip, we update the title if it is a function\n      if (isFunction(config.title)) {\n        el[BV_TOOLTIP].updateData({\n          title: config.title(el)\n        });\n      }\n    });\n  }\n\n  var data = {\n    title: config.title,\n    triggers: config.trigger,\n    placement: config.placement,\n    fallbackPlacement: config.fallbackPlacement,\n    variant: config.variant,\n    customClass: config.customClass,\n    container: config.container,\n    boundary: config.boundary,\n    delay: config.delay,\n    offset: config.offset,\n    noFade: !config.animation,\n    id: config.id,\n    interactive: config.interactive,\n    disabled: config.disabled,\n    html: config.html\n  };\n  var oldData = el[BV_TOOLTIP].__bv_prev_data__;\n  el[BV_TOOLTIP].__bv_prev_data__ = data;\n\n  if (!looseEqual(data, oldData)) {\n    // We only update the instance if data has changed\n    var newData = {\n      target: el\n    };\n    keys(data).forEach(function (prop) {\n      // We only pass data properties that have changed\n      if (data[prop] !== oldData[prop]) {\n        // if title is a function, we execute it here\n        newData[prop] = prop === 'title' && isFunction(data[prop]) ? data[prop](el) : data[prop];\n      }\n    });\n    el[BV_TOOLTIP].updateData(newData);\n  }\n}; // Remove Tooltip on our element\n\n\nvar removeTooltip = function removeTooltip(el) {\n  if (el[BV_TOOLTIP]) {\n    el[BV_TOOLTIP].$destroy();\n    el[BV_TOOLTIP] = null;\n  }\n\n  delete el[BV_TOOLTIP];\n}; // Export our directive\n\n\nexport var VBTooltip = {\n  bind: function bind(el, bindings, vnode) {\n    applyTooltip(el, bindings, vnode);\n  },\n  // We use `componentUpdated` here instead of `update`, as the former\n  // waits until the containing component and children have finished updating\n  componentUpdated: function componentUpdated(el, bindings, vnode) {\n    // Performed in a `$nextTick()` to prevent render update loops\n    nextTick(function () {\n      applyTooltip(el, bindings, vnode);\n    });\n  },\n  unbind: function unbind(el) {\n    removeTooltip(el);\n  }\n};","import { VBTooltip } from './tooltip';\nimport { pluginFactory } from '../../utils/plugins';\nvar VBTooltipPlugin = /*#__PURE__*/pluginFactory({\n  directives: {\n    VBTooltip: VBTooltip\n  }\n});\nexport { VBTooltipPlugin, VBTooltip };","import { NAME_MODAL } from '../../constants/components';\nimport { EVENT_NAME_SHOW, EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_ENTER, CODE_SPACE } from '../../constants/key-codes';\nimport { getAttr, hasAttr, isDisabled, matches, select, setAttr } from '../../utils/dom';\nimport { getRootActionEventName, eventOn, eventOff } from '../../utils/events';\nimport { isString } from '../../utils/inspect';\nimport { keys } from '../../utils/object';\nimport { getEventRoot } from '../../utils/get-event-root';\nimport { getInstanceFromDirective } from '../../utils/get-instance-from-directive'; // Emitted show event for modal\n\nvar ROOT_ACTION_EVENT_NAME_SHOW = getRootActionEventName(NAME_MODAL, EVENT_NAME_SHOW); // Prop name we use to store info on root element\n\nvar PROPERTY = '__bv_modal_directive__';\n\nvar getTarget = function getTarget(_ref) {\n  var _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? {} : _ref$modifiers,\n      arg = _ref.arg,\n      value = _ref.value;\n  // Try value, then arg, otherwise pick last modifier\n  return isString(value) ? value : isString(arg) ? arg : keys(modifiers).reverse()[0];\n};\n\nvar getTriggerElement = function getTriggerElement(el) {\n  // If root element is a dropdown-item or nav-item, we\n  // need to target the inner link or button instead\n  return el && matches(el, '.dropdown-menu > li, li.nav-item') ? select('a, button', el) || el : el;\n};\n\nvar setRole = function setRole(trigger) {\n  // Ensure accessibility on non button elements\n  if (trigger && trigger.tagName !== 'BUTTON') {\n    // Only set a role if the trigger element doesn't have one\n    if (!hasAttr(trigger, 'role')) {\n      setAttr(trigger, 'role', 'button');\n    } // Add a tabindex is not a button or link, and tabindex is not provided\n\n\n    if (trigger.tagName !== 'A' && !hasAttr(trigger, 'tabindex')) {\n      setAttr(trigger, 'tabindex', '0');\n    }\n  }\n};\n\nvar bind = function bind(el, binding, vnode) {\n  var target = getTarget(binding);\n  var trigger = getTriggerElement(el);\n\n  if (target && trigger) {\n    var handler = function handler(event) {\n      // `currentTarget` is the element with the listener on it\n      var currentTarget = event.currentTarget;\n\n      if (!isDisabled(currentTarget)) {\n        var type = event.type;\n        var key = event.keyCode; // Open modal only if trigger is not disabled\n\n        if (type === 'click' || type === 'keydown' && (key === CODE_ENTER || key === CODE_SPACE)) {\n          getEventRoot(getInstanceFromDirective(vnode, binding)).$emit(ROOT_ACTION_EVENT_NAME_SHOW, target, currentTarget);\n        }\n      }\n    };\n\n    el[PROPERTY] = {\n      handler: handler,\n      target: target,\n      trigger: trigger\n    }; // If element is not a button, we add `role=\"button\"` for accessibility\n\n    setRole(trigger); // Listen for click events\n\n    eventOn(trigger, 'click', handler, EVENT_OPTIONS_PASSIVE);\n\n    if (trigger.tagName !== 'BUTTON' && getAttr(trigger, 'role') === 'button') {\n      // If trigger isn't a button but has role button,\n      // we also listen for `keydown.space` && `keydown.enter`\n      eventOn(trigger, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n    }\n  }\n};\n\nvar unbind = function unbind(el) {\n  var oldProp = el[PROPERTY] || {};\n  var trigger = oldProp.trigger;\n  var handler = oldProp.handler;\n\n  if (trigger && handler) {\n    eventOff(trigger, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(trigger, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(el, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(el, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n  }\n\n  delete el[PROPERTY];\n};\n\nvar componentUpdated = function componentUpdated(el, binding, vnode) {\n  var oldProp = el[PROPERTY] || {};\n  var target = getTarget(binding);\n  var trigger = getTriggerElement(el);\n\n  if (target !== oldProp.target || trigger !== oldProp.trigger) {\n    // We bind and rebind if the target or trigger changes\n    unbind(el, binding, vnode);\n    bind(el, binding, vnode);\n  } // If trigger element is not a button, ensure `role=\"button\"`\n  // is still set for accessibility\n\n\n  setRole(trigger);\n};\n\nvar updated = function updated() {};\n/*\n * Export our directive\n */\n\n\nexport var VBModal = {\n  inserted: componentUpdated,\n  updated: updated,\n  componentUpdated: componentUpdated,\n  unbind: unbind\n};","import { VBToggle } from './toggle';\nimport { pluginFactory } from '../../utils/plugins';\nvar VBTogglePlugin = /*#__PURE__*/pluginFactory({\n  directives: {\n    VBToggle: VBToggle\n  }\n});\nexport { VBTogglePlugin, VBToggle };","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend, mergeData } from '../../vue';\nimport { NAME_ICON_BASE } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { identity } from '../../utils/identity';\nimport { isUndefinedOrNull } from '../../utils/inspect';\nimport { mathMax } from '../../utils/math';\nimport { toFloat } from '../../utils/number';\nimport { makeProp } from '../../utils/props'; // --- Constants ---\n// Base attributes needed on all icons\n\nvar BASE_ATTRS = {\n  viewBox: '0 0 16 16',\n  width: '1em',\n  height: '1em',\n  focusable: 'false',\n  role: 'img',\n  'aria-label': 'icon'\n}; // Attributes that are nulled out when stacked\n\nvar STACKED_ATTRS = {\n  width: null,\n  height: null,\n  focusable: null,\n  role: null,\n  'aria-label': null\n}; // --- Props ---\n\nexport var props = {\n  animation: makeProp(PROP_TYPE_STRING),\n  content: makeProp(PROP_TYPE_STRING),\n  flipH: makeProp(PROP_TYPE_BOOLEAN, false),\n  flipV: makeProp(PROP_TYPE_BOOLEAN, false),\n  fontScale: makeProp(PROP_TYPE_NUMBER_STRING, 1),\n  rotate: makeProp(PROP_TYPE_NUMBER_STRING, 0),\n  scale: makeProp(PROP_TYPE_NUMBER_STRING, 1),\n  shiftH: makeProp(PROP_TYPE_NUMBER_STRING, 0),\n  shiftV: makeProp(PROP_TYPE_NUMBER_STRING, 0),\n  stacked: makeProp(PROP_TYPE_BOOLEAN, false),\n  title: makeProp(PROP_TYPE_STRING),\n  variant: makeProp(PROP_TYPE_STRING)\n}; // --- Main component ---\n// Shared private base component to reduce bundle/runtime size\n// @vue/component\n\nexport var BVIconBase = /*#__PURE__*/extend({\n  name: NAME_ICON_BASE,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var data = _ref.data,\n        props = _ref.props,\n        children = _ref.children;\n    var animation = props.animation,\n        content = props.content,\n        flipH = props.flipH,\n        flipV = props.flipV,\n        stacked = props.stacked,\n        title = props.title,\n        variant = props.variant;\n    var fontScale = mathMax(toFloat(props.fontScale, 1), 0) || 1;\n    var scale = mathMax(toFloat(props.scale, 1), 0) || 1;\n    var rotate = toFloat(props.rotate, 0);\n    var shiftH = toFloat(props.shiftH, 0);\n    var shiftV = toFloat(props.shiftV, 0); // Compute the transforms\n    // Note that order is important as SVG transforms are applied in order from\n    // left to right and we want flipping/scale to occur before rotation\n    // Note shifting is applied separately\n    // Assumes that the viewbox is `0 0 16 16` (`8 8` is the center)\n\n    var hasScale = flipH || flipV || scale !== 1;\n    var hasTransforms = hasScale || rotate;\n    var hasShift = shiftH || shiftV;\n    var hasContent = !isUndefinedOrNull(content);\n    var transforms = [hasTransforms ? 'translate(8 8)' : null, hasScale ? \"scale(\".concat((flipH ? -1 : 1) * scale, \" \").concat((flipV ? -1 : 1) * scale, \")\") : null, rotate ? \"rotate(\".concat(rotate, \")\") : null, hasTransforms ? 'translate(-8 -8)' : null].filter(identity); // We wrap the content in a `<g>` for handling the transforms (except shift)\n\n    var $inner = h('g', {\n      attrs: {\n        transform: transforms.join(' ') || null\n      },\n      domProps: hasContent ? {\n        innerHTML: content || ''\n      } : {}\n    }, children); // If needed, we wrap in an additional `<g>` in order to handle the shifting\n\n    if (hasShift) {\n      $inner = h('g', {\n        attrs: {\n          transform: \"translate(\".concat(16 * shiftH / 16, \" \").concat(-16 * shiftV / 16, \")\")\n        }\n      }, [$inner]);\n    } // Wrap in an additional `<g>` for proper animation handling if stacked\n\n\n    if (stacked) {\n      $inner = h('g', [$inner]);\n    }\n\n    var $title = title ? h('title', title) : null;\n    var $content = [$title, $inner].filter(identity);\n    return h('svg', mergeData({\n      staticClass: 'b-icon bi',\n      class: (_class = {}, _defineProperty(_class, \"text-\".concat(variant), variant), _defineProperty(_class, \"b-icon-animation-\".concat(animation), animation), _class),\n      attrs: BASE_ATTRS,\n      style: stacked ? {} : {\n        fontSize: fontScale === 1 ? null : \"\".concat(fontScale * 100, \"%\")\n      }\n    }, // Merge in user supplied data\n    data, // If icon is stacked, null-out some attrs\n    stacked ? {\n      attrs: STACKED_ATTRS\n    } : {}, // These cannot be overridden by users\n    {\n      attrs: {\n        xmlns: stacked ? null : 'http://www.w3.org/2000/svg',\n        fill: 'currentColor'\n      }\n    }), $content);\n  }\n});","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extend, mergeData } from '../../vue';\nimport { omit } from '../../utils/object';\nimport { kebabCase, pascalCase, trim } from '../../utils/string';\nimport { BVIconBase, props as BVIconBaseProps } from './icon-base';\nvar iconProps = omit(BVIconBaseProps, ['content']);\n/**\n * Icon component generator function\n *\n * @param {string} icon name (minus the leading `BIcon`)\n * @param {string} raw `innerHTML` for SVG\n * @return {VueComponent}\n */\n\nexport var makeIcon = function makeIcon(name, content) {\n  // For performance reason we pre-compute some values, so that\n  // they are not computed on each render of the icon component\n  var kebabName = kebabCase(name);\n  var iconName = \"BIcon\".concat(pascalCase(name));\n  var iconNameClass = \"bi-\".concat(kebabName);\n  var iconTitle = kebabName.replace(/-/g, ' ');\n  var svgContent = trim(content || '');\n  return /*#__PURE__*/extend({\n    name: iconName,\n    functional: true,\n    props: iconProps,\n    render: function render(h, _ref) {\n      var data = _ref.data,\n          props = _ref.props;\n      return h(BVIconBase, mergeData( // Defaults\n      {\n        props: {\n          title: iconTitle\n        },\n        attrs: {\n          'aria-label': iconTitle\n        }\n      }, // User data\n      data, // Required data\n      {\n        staticClass: iconNameClass,\n        props: _objectSpread(_objectSpread({}, props), {}, {\n          content: svgContent\n        })\n      }));\n    }\n  });\n};"],"sourceRoot":""}